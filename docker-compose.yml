services:
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - loki-network

  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    networks:
      - loki-network
    depends_on:
      - loki

  lokitest-api:
    build:
      context: ./LokiTest
      dockerfile: Dockerfile
    container_name: lokitest-api
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - LOKI_URL=http://loki:3100
      - Serilog__MinimumLevel__Default=Debug
      - Serilog__MinimumLevel__Override__Microsoft=Information
    networks:
      - loki-network
    depends_on:
      - loki

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki-network
    depends_on:
      - loki

  log-viewer:
    build:
      context: ./LogViewer
      dockerfile: Dockerfile
    container_name: log-viewer
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - LOKI_URL=http://loki:3100
      - API_URL=http://lokitest-api:8080
    networks:
      - loki-network
    depends_on:
      - loki
      - lokitest-api

networks:
  loki-network:
    driver: bridge

volumes:
  grafana-storage:
